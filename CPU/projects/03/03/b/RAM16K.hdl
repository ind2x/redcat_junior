// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    // select register
    DMux4Way(in=load, sel=address[12..13], a=ram0, b=ram1, c=ram2, d=ram3);
    // RAM 0 ~ 16K
    RAM4K(in=in, load=ram0, address=address[0..11], out=PreOut0);
    RAM4K(in=in, load=ram1, address=address[0..11], out=PreOut1);
    RAM4K(in=in, load=ram2, address=address[0..11], out=PreOut2);
    RAM4K(in=in, load=ram3, address=address[0..11], out=PreOut3);
    // return out from selected ram
    Mux4Way16(a=PreOut0, b=PreOut1, c=PreOut2, d=PreOut3, sel=address[12..13], out=out);
}