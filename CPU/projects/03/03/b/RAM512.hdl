// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/b/RAM512.hdl

/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    // select register
    DMux8Way(in=load, sel=address[6..8], a=ram0, b=ram1, c=ram2, d=ram3, e=ram4, f=ram5, g=ram6, h=ram7);
    // RAM 0 ~ 511, 64ram * 8
    RAM64(in=in, load=ram0, address=address[0..5], out=PreOut0);
    RAM64(in=in, load=ram1, address=address[0..5], out=PreOut1);
    RAM64(in=in, load=ram2, address=address[0..5], out=PreOut2);
    RAM64(in=in, load=ram3, address=address[0..5], out=PreOut3);
    RAM64(in=in, load=ram4, address=address[0..5], out=PreOut4);
    RAM64(in=in, load=ram5, address=address[0..5], out=PreOut5);
    RAM64(in=in, load=ram6, address=address[0..5], out=PreOut6);
    RAM64(in=in, load=ram7, address=address[0..5], out=PreOut7);
    // return out from selected ram
    Mux8Way16(a=PreOut0, b=PreOut1, c=PreOut2, d=PreOut3, e=PreOut4, f=PreOut5, g=PreOut6, h=PreOut7, sel=address[6..8], out=out);
}