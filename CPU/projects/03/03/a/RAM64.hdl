// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM64.hdl

/**
 * Memory of 64 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM64 {
    IN in[16], load, address[6];
    OUT out[16];

    PARTS:
    // select register range
    DMux8Way(in=load, sel=address[3..5], a=ram0to7, b=ram8to15, c=ram16to23, d=ram24to31, e=ram32to39, f=ram40to47, g=ram48to55, h=ram56to63);
    // register 0 ~ 7
    RAM8(in=in, load=ram0to7, address=address[0..2], out=PreOut0to7);
    // register 8 ~ 15
    RAM8(in=in, load=ram8to15, address=address[0..2], out=Preout8to15);
    // register 16 ~ 23
    RAM8(in=in, load=ram16to23, address=address[0..2], out=Preout16to23);
    // register 24 ~ 31
    RAM8(in=in, load=ram24to31, address=address[0..2], out=Preout24to31);
    // register 32 ~ 39
    RAM8(in=in, load=ram32to39, address=address[0..2], out=Preout32to39);
    // register 40 ~ 47
    RAM8(in=in, load=ram40to47, address=address[0..2], out=Preout40to47);
    // register 48 ~ 55
    RAM8(in=in, load=ram48to55, address=address[0..2], out=Preout48to55);
    // register 56 ~ 63
    RAM8(in=in, load=ram56to63, address=address[0..2], out=Preout56to63);
    // return out from selected register
    Mux8Way16(a=PreOut0to7, b=Preout8to15, c=Preout16to23, d=Preout24to31, e=Preout32to39, f=Preout40to47, g=Preout48to55, h=Preout56to63, sel=address[3..5], out=out); 
}